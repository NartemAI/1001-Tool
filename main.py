import functions

programs = {
    1: ("–ú–æ–Ω–µ—Ç–∫–∞", functions.coin_flip),
    2: ("–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—Ä–æ—Å—Ç–æ–µ —á–∏—Å–ª–æ", functions.Checking_a_prime_number),
    3: ("–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –ù–û–ö –∏ –ù–û–î", functions.LCM_GCD),
    4: ("–¢–µ–∫—Å—Ç –≤ –¥–≤–æ–∏—á–Ω—ã–π –∫–æ–¥", functions.text_to_binary),
    5: ("–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –ò–ú–¢", functions.BMI),
    6: ("–¢–∞–π–º–µ—Ä –≤—ã–∫–ª—é—á–µ–Ω–∏—è", functions.shutdown_timer),
    7: ("–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–∞—Ä–æ–ª—è", functions.generate_password),
    8: ("–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–æ–ª—è", functions.check_password),
    9: ("–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ª–æ–≥–∏–Ω–∞", functions.generate_login),
    10: ("–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª", functions.random_number),
    11: ("–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä Hm", functions.torque_calculator),
    12: ("Ip check", functions.ip_check),
}


def show_main_instructions():
    print("\t* –ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –æ–∫–Ω–∞")
    print("\t* –í–≤–µ–¥–∏—Ç–µ 0 –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø—Ä–æ–≥—Ä–∞–º–º")


def show_programs():
    print("–î–ª—è –≤—ã–±–æ—Ä–∞ –ø—Ä–æ–≥—Ä–∞–º–º—ã –≤–≤–µ–¥–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ —á–∏—Å–ª–æ")
    print("0 - –≤—ã–π—Ç–∏ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    print("S - –ø–æ–∏—Å–∫ –ø—Ä–æ–≥—Ä–∞–º–º—ã üîç")
    for key, (name, _) in programs.items():
        print(f"{key} - {name}")

def search_program():
    print("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã (–∏–ª–∏ —á–∞—Å—Ç—å –Ω–∞–∑–≤–∞–Ω–∏—è):")
    query = input("#$ ").strip().lower()
    if not query:
        print("–ü–æ–∏—Å–∫ –æ—Ç–º–µ–Ω—ë–Ω")
        return
    found = False
    for key, (name, _) in programs.items():
        if query in name.lower():
            print(f"{key} - {name}")
            found = True
    if not found:
        print("–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ ‚ùå")


print("–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ó–¥–µ—Å—å –≤—ã –Ω–∞–π–¥—ë—Ç–µ –º–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º!")
show_main_instructions()

while True:
    i = input("#$ ")
    if i == "":
        break

    if i == "0":  # –º–µ–Ω—é –ø—Ä–æ–≥—Ä–∞–º–º
        while True:
            show_programs()
            choice = input("#$ ").strip()

            if choice == "":
                break
            if choice == "0":
                break
            if choice.lower() == "s":
                search_program()
                continue

            if choice.isdigit():
                choice = int(choice)
                if choice in programs:
                    programs[choice][1]()  # –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ —Å–ª–æ–≤–∞—Ä—è
                else:
                    print("–¢–∞–∫–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã –Ω–µ—Ç!ü§∑")
            else:
                print("–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ –∏–ª–∏ S –¥–ª—è –ø–æ–∏—Å–∫–∞!")

        show_main_instructions()

    elif i.isdigit():
        i = int(i)
        if i in programs:
            programs[i][1]()  # –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–∞–ø—Ä—è–º—É—é
        else:
            print("–¢–∞–∫–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã –Ω–µ—Ç!ü§∑")
        show_main_instructions()
    else:
        print("–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ!")
        show_main_instructions()
